---
- hosts: app
  become: yes
  tags:
    - dependencies
  tasks:
    - name: Upgrade packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: 'yes'

    - name: Install python deployment dependencies
      ansible.builtin.apt:
        name:
          - python3-pip
          - python3-venv
        state: present

    - name: Install virtualenv via pip
      ansible.builtin.pip:
        name: virtualenv
        executable: pip3

    - name: Install boto requirement
      ansible.builtin.pip:
        name:
          - boto3
          - botocore
        state: present

- hosts: app
  become: yes
  tags:
    - dependencies
  tasks:
    - name: Register reboot required file
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Reboot if Required
      reboot:
      when: reboot_required.stat.exists

- hosts: app
  tags:
    - setup
  tasks:
    - name: Create base directory mount point
      become: yes
      ansible.builtin.file:
        path: "{{base_dir}}"
        state: directory

    # Could use ebsnvme-id from https://github.com/amazonlinux/amazon-ec2-utils
    #   to create symlinks that use the original volume name
    - name: Format ebs volume
      become: yes
      ansible.builtin.filesystem:
        dev: /dev/nvme1n1
        fstype: ext4

    - name: Mount ebs volume
      become: yes
      ansible.posix.mount:
        src: /dev/nvme1n1
        path: "{{base_dir}}"
        fstype: ext4
        state: mounted

    - name: Set owner of mount point
      become: yes
      ansible.builtin.file:
        path: "{{base_dir}}"
        state: directory
        owner: "{{ansible_user_id}}"
        group: "{{ansible_user_id}}"


- hosts: app
  become: no
  tags:
    - instance
  tasks:
    - name: Create API instance dir
      ansible.builtin.file:
        path: "{{inst_dir}}/api"
        state: directory
        owner: ubuntu
        group: ubuntu

    - name: Setup API venv
      ansible.builtin.pip:
        name:
          - "git+https://github.com/statgen/bravo_api.git"
          - gunicorn
          - gevent
        virtualenv: "{{inst_dir}}/api/venv"
        state: present
        extra_args: "--upgrade"

    - name: Create API config
      ansible.builtin.template:
        mode: 0775
        dest: "{{inst_dir}}/api/config.py"
        src: templates/config_api.py.j2

- hosts: app
  tags:
    - data
  tasks:
    - name: Data Loading Condition
      ansible.builtin.debug:
        msg: "Data loading skipped because load_data = no"
      when: not load_data

    - name: Download and Load Data
      ansible.builtin.include_role:
        name: data_loading
      when: load_data

- hosts: app
  become: yes
  tags:
    - instance
    - systemd
  tasks:
    - name: Create systemd service for API
      ansible.builtin.template:
        mode: 0755
        dest: /etc/systemd/system/bravo-api.service
        src: templates/bravo-api.service.j2

    - name: Reload systemd daemons
      ansible.builtin.systemd:
        name: bravo-api.service.j2

- hosts: mongo
  become: yes
  tags:
    - database
    - dependencies
  roles:
    - role: community.mongodb.mongodb_repository
      vars:
        mongodb_version: "4.4"

    - role: community.mongodb.mongodb_install
      # vars:
      #   specific_mongodb_version: "4.4"
  tasks:
    - name: Start mongod service
      ansible.builtin.systemd:
        name: mongod.service
        state: started

- hosts: app
  become: yes
  gather_facts: no
  tags:
    - systemd
    - start
  tasks:
    - name: Start API service
      ansible.builtin.systemd:
        daemon_reload: yes
        name: bravo-api.service
        enabled: yes
        state: started
